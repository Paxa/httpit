#!/usr/bin/env ruby

require 'rubygems'
require 'sinatra'
require 'haml'
require 'redcloth'

ROOT = Dir.pwd

set :views, ROOT
set :public,   ROOT
set :app_file, $0

set :static, false

# only one parametr - port number
if ARGV.size > 0
  set :port, ARGV.first.to_i
end


# build array of contents and theris type for specified folder
def get_content folder = nil
  # building absolute path
  abs_path = folder ? File.join(ROOT, folder) : ROOT
  
  # build array if pairs: [filename, :type]
  Dir.entries(abs_path).map do |obj|
    [obj, 
      if File.file? File.join(abs_path, obj)
        :file
      elsif File.directory? File.join(abs_path, obj)
        :dir
      elsif File.symlink? File.join(abs_path, obj)
        :link
      end
    ]
  end
end

# shows index.html or folder contents if index.html does not exists
get '/' do 
  if File.file?('./index.html')
    File.open('./index.html') {|f| f.read }
  elsif File.file?('./index.haml')
    haml :index
  else
    @folder = ''
    @files = get_content.select {|f| f[0] != '.' && f[0] != '..' }
    haml :listing
  end
end

get '/__img_preview' do
  params[:file] = params[:file].gsub ' ', '\ '
  tmppath = "/tmp/httpit_preview_#{Time.now.to_i}.jpeg"
  `convert #{File.join ROOT, params[:file]} -resize 1024 -quality 100% #{tmppath}`
  content_type "image/jpeg"
  content = File.open(tmppath, 'rb') { |f| f.read }
  File.delete(tmppath)
  content
end

# shows folder contents
get %r{.+} do
  return nil if request.path == '/favicon.ico'
  @path = request.path
  
  abs_path = File.join(ROOT, @path)
  
  if @path =~ /.+\.sass\.css/
    content_type :css
    sass @path.chomp('.sass.css').to_sym
    
  elsif !File.file?(abs_path) && !File.directory?(abs_path)
    halt 404

  elsif @path =~ /.+\.md/
    content_type :html
    content = File.open(abs_path) {|f| f.read }
    return RedCloth.new(content).to_html
    
  elsif @path =~ /.+\.haml/
    haml @path.chomp('.haml').to_sym
      
  elsif File.file?(abs_path)
    send_file(abs_path)
    
  else
    @files = get_content(@path)
    haml :listing
  end
end

error 404 do
  @path = request.path
  haml :not_found
end

__END__

@@ listing
<style type="text/css">
:sass
  #wrap
    :width 800px
    :margin 50 auto

  span
    :color #777
      
  ul, li
    :list-style-type none
    
  .preview_link
    :color #55a075
    :margin-left 20px
</style>
#wrap
  %h1
    %span Folder: 
    = @path == '' ? '/' : @path
    - if @path != ''
      %a{:href => "#{@path}/.."} &larr;

  %ul
    - for file in @files
      %li
        - if file[1] == :file
          %span= "&ndash;"
        - elsif file[1] == :dir
          %span= "+"
        - elsif file[1] == :link
          %span= "&rarr;"
          
        %a{:href => "#{@path}/#{file[0]}"}= file[0]
        
        - if %w{.jpg .jpeg .png .gif}.include?(File.extname(file[0]).downcase)
          %a{:href => "/__img_preview?file=#{@path}/#{file[0]}", :class => "preview_link"} #1024

@@ not_found
<style type="text/css">
:sass
  #wrap
    :width 800px
    :margin 50 auto
</style>
#wrap
  %h1 File not found
  
  %h3= "You requested <i>#{@path}</i>"